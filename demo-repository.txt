
git 分布式版本控制

1 初始化版本库：git init
*此时会提示版本库初始化为空：initialize empty git repository
*初始化完成，在上层目录多出一个.git的文件，它是git控制的关键，查看它需要命令：ls -ah

2 把此文件demo-repository添加给git的版本库中(仓库)：git add demo-repository.txt
*此时没有提示，说明添加成功
*可能报错文件匹配不到：fatal:pathspec 'xx' did not match any files
	**解决：检查文件是否存在指向的当前目录中，查看当前目录命令：pwd

3 把添加的文件再提交回仓库并命名一个版本名(-m:其实是本次提交的说明)：git commit -m 'xx版本'
*此时提示root管理员在主分支master提交一个叫做xx的文件，1个文件被改动，共有12行被插入(12行的原因是我在12行结束时再添加了一次)：
[master (root-commit) 69aa247] demo-repository1
1 file changed,12 insertions(+)
create mode 100644 demo-repository.txt
*为啥需要add,commit的原因：commit可以一次提交多个文件，而且add添加一次是添加之前的文件，当添加后再次修改又需要添加一次

4 查看当前仓库的状态：git status
*两种情况：
====1
*文件修改但仓库中没有添加/提交时：
此时提示在主分支master上变动没有被保存到提交的文档里，可以使用git add <file>这个命令去更新到下一个将提交的版本里，也可以使用
git checkout --<file>撤销在工作区做的变动
On branch master
Change not staged for commit:
(use "git add <file>..." to update what will be committed)
(use "git checkout -- <file...> to discard changes in working directory")
*会提示你添加到已经存在的最新版本里去，使用命令：git add或者git commit -a
====2
*添加到仓库中时：
此时提示改变会被提交，使用git reset HEAD <file> 可撤销到最新的版本中
On branch master
Change to be commited:
(use "git reset HEAD <file> ..." to unstage)

5 查看没有提交的文件改动部分：git diff
*此命令会把没有添加到仓库的文件改动部分显示在控制台，-表示之前版本，+表示更改之后变动
diff --git a/demo-repository.txt b/demo-repository.txt
index 366c425 100644
--- a/demo-repository
+++ b/demo-repository
...

6 查看文件中所有内容：cat <file>






